@model Proyecto_Tienda_Virtual.Models.Data_ImageViewModel
<!DOCTYPE html>
<html>
<body>
    <head>
        <style>
            .img-fixed {
                width: 100%; /* Ajusta al ancho del contenedor */
                height: 250px; /* Altura fija para todas */
                object-fit: cover; /* Recorta la imagen sin distorsionar */
            }
        </style>
    </head>



    <div class="container mt-4">
        <div class="row">
            @foreach (var item in Model.DataImages)
            {
                <div class="col-md-4 d-flex">
                    <div class="card d-flex flex-column w-100">
                        <img src="@item.Url" class="card-img-top img-fixed rounded" alt="Imagen">
                        <div class="card-body d-flex flex-column text-center">
                            <h3 class="card-title">@item.Header</h3>
                            <p class="card-text">@item.Content</p>
                            <form asp-action="Add_car" method="post" class="mt-auto">
                                <input type="hidden" name="ItemID" value="@item.ID" />
                                <button id="liveToastBtn" type="submit" class="btn btn-sm btn-outline-primary mx-auto" style="border: 1px solid black; color: black; background-color: transparent;" onmouseover="this.style.backgroundColor='black'; this.style.color='white'" onmouseout="this.style.backgroundColor='transparent'; this.style.color='black'">+Add to Cart 🛒</button>
                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>



@if (TempData["MostrarToast"] != null)
{
    <script>
        const toastLive = document.getElementById('liveToast');
        const toast = new bootstrap.Toast(toastLive);
        toast.show();
    </script>
}


<!-- Paginación con Bootstrap -->
<div class="d-flex justify-content-center my-4">
    <ul class="pagination">
        <li class="page-item @(Model.CurrentPage == 0 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1 })">&laquo;</a>
        </li>

        @for (int i = 0; i < Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i })">@(i + 1)</a>
            </li>
        }

        <li class="page-item @(Model.CurrentPage >= Model.TotalPages - 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1 })">&raquo;</a>
        </li>
    </ul>
</div>




</body>
</html>
